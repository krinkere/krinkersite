{"pages":[{"tags":"pages","url":"pages/about.html","title":"About","text":"Why I started this blog My background My family My hobbies"},{"tags":"pages","url":"pages/book.html","title":"Book","text":"Coming in Fall 2018 Book: Python Programming for Undergraduate Engineers This books is for undergraduate engineers learning programming. It is focused on using Python and programming to solve engineering problems. Chapter List Preface Chapter 1: Orientation Chapter 2: Engineering 101 Chapter 3: Statics Chapter 4: Circuits I Chapter 5: Strengths Chapter 6: Circuits II Chapter 7: Dynamics Chapter 8: Circuits III Chapter 9: Capstone Appendix Pre-order will be available soon"},{"tags":"example posts","url":"second-post.html","title":"Second Post - Part 2","text":"This is the second post of a series of posts. It will show series and an embedded youtube video."},{"tags":"example posts","url":"first-post.html","title":"First Post - Part 1","text":"This is the first post of a series of demonstration posts."},{"tags":"Plotting","url":"plotting-sin-cos-with-matplotlib.html","title":"Plotting sine and cosine with matplotlib and Python","text":"Plotting is an essential skill for Engineers. Plots can reveal trends in data and outliers. Plots are a way to visually communicate results with your engineering team, supervisors and customers. In this post, we are going to plot a couple of trig functions using Python and matplotlib. Matplotlib is a plotting library that can produce line plots, bar graphs, histograms and many other types of plots using Python. Matplotlib is not included in the standard library. If you downloaded Python from python.org, you will need to install matplotlib and numpy with pip on the command line. $ pip install matplotlib $ pip install numpy If you are using the Anaconda distribution of Python (which is the distribution of Python I recommend for undergraduate engineers) matplotlib and numpy (plus a bunch of other libraries useful for engineers) are included. If you are using Anaconda, you do not need to install any additional packages to use matplotlib. In this post, we are going to build a couple of plots which show the trig functions sine and cosine. We'll start by importing matplotlib and numpy using the standard lines import matplotlib.pyplot as plt and import numpy as np. This means we can use the short alias plt and np when we call these two libraries. You could import numpy as wonderburger and use wonderburger.sin() to call the numpy sine function, but this would look funny to other engineers. The line import numpy as np has become a common convention and will look familiar to other engineers using Python. In case you are working in a Juypiter notebook, the %matplotlib inline command is also necessary to view the plots directly in the notebook. In [1]: import matplotlib.pyplot as plt import numpy as np # if using a jupyter notebook % matplotlib inline Next we will build a set of x values from zero to 4π in increments of 0.1 radians to use in our plot. The x-values are stored in a numpy array. Numpy's arange() function has three arguments: start, stop, step. We start at zero, stop at 4π and step by 0.1 radians. Then we define a variable y as the sine of x using numpy's sin() function. In [2]: x = np . arange ( 0 , 4 * np . pi , 0.1 ) # start,stop,step y = np . sin ( x ) To create the plot, we use matplotlib's plt.plot() function. The two arguments are our numpy arrays x and y. The line plt.show() will show the finished plot. In [3]: plt . plot ( x , y ) plt . show ()"},{"tags":"example posts","url":"forth-post.html","title":"Third Post - Part 3","text":"This post contains a jupyter notebook. In [1]: print ( \"Sigh\" ) Sigh"},{"tags":"example posts","url":"fourth-post.html","title":"Fourth Post - Part 4","text":"This is the fourth post of a series of posts. It will demonstrate tables. Column Header Column Header Row 1 Data 1 Row 2 Data 2"}]}