{"pages":[{"text":"Why I started this blog My background My family My hobbies","tags":"pages","title":"About","url":"pages/about.html"},{"text":"When trying to update your local copy from remote master copy, you will see following error $ git pull origin master error: Your local changes to the following files would be overwritten by merge: <list of files> Please commit your changes or stash them before you merge. Aborting You have several options here Commit the change $ git add . $ git commit -m \"committing before the update\" Stash them $ git stash $ git stash pop Overwrite local changes git reset --hard","tags":"How To article","title":"Commit your changes or stash them before you can merge??!?!","url":"Commit_your_changes_or_stash_them_before_you_can_merge.html"},{"text":"Here is a quick example: $ grep -r \"text string to search\" directory-path To search for a string â€˜logged in' in all text (*.log) files located in /etc/networks/ directory for example, use: $ grep \"logged in\" /etc/networks/*.log To search all subdirectories recursively, include -r option like so: $ grep -r \"logged in\" /etc/networks/*.log The grep command prints the matching lines for each match. Pass -H option to print the filename only: $ grep -H -r \"logged in\" /etc/networks/*.log To search for two or more words, use egrep: egrep -w -r 'logged in|logged out' /etc/networks/*.log To hide warning spam of permission for certain directories being denied, etc, send them to dev/null: $ grep -w -r 'logged in|logged out' /etc/networks/*.log 2 >/dev/null To make it case insensitive, use -i option: $ grep -i \"logged in\" /etc/networks/*.log","tags":"How To article","title":"How to find a file containing particular text in Linux","url":"How_to_find_a_file_containing_particular_text_in_Linux.html"}]}