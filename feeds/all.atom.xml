<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Cloud. Big Data. Analytics... and so on</title><link href="https://krinkere.github.io/krinkersite/" rel="alternate"></link><link href="https://krinkere.github.io/krinkersite/feeds/all.atom.xml" rel="self"></link><id>https://krinkere.github.io/krinkersite/</id><updated>2018-03-15T15:46:00-04:00</updated><entry><title>Commit your changes or stash them before you can merge??!?!</title><link href="https://krinkere.github.io/krinkersite/Commit_your_changes_or_stash_them_before_you_can_merge.html" rel="alternate"></link><published>2018-03-09T07:54:00-05:00</published><updated>2018-03-09T08:17:00-05:00</updated><author><name>Al Krinker</name></author><id>tag:krinkere.github.io,2018-03-09:/krinkersite/Commit_your_changes_or_stash_them_before_you_can_merge.html</id><summary type="html">&lt;p&gt;What to do when you are faced with 'Please, commit your changes or stash them before you can merge.' message from git as you are trying to get latest code off your remote repository&lt;/p&gt;</summary><content type="html">&lt;p&gt;When trying to update your local copy from remote master copy, you will see following error&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git pull origin master
&lt;span class="go"&gt;error: Your local changes to the following files would be overwritten by merge:&lt;/span&gt;
&lt;span class="go"&gt;&amp;lt;list of files&amp;gt;&lt;/span&gt;
&lt;span class="go"&gt;Please commit your changes or stash them before you merge.&lt;/span&gt;
&lt;span class="go"&gt;Aborting&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You have several options here&lt;/p&gt;
&lt;h3&gt;Commit the change&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git add .
&lt;span class="gp"&gt;$&lt;/span&gt; git commit -m &lt;span class="s2"&gt;&amp;quot;committing before the update&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Stash them&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; git stash
&lt;span class="gp"&gt;$&lt;/span&gt; git stash pop
&lt;/pre&gt;&lt;/div&gt;


&lt;h3&gt;Overwrite local changes&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;git reset --hard&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="git"></category></entry><entry><title>Accessing wired Windows printer from your Mac</title><link href="https://krinkere.github.io/krinkersite/Accessing_wired_Windows_printer_from_your_Mac.html" rel="alternate"></link><published>2015-12-20T12:52:00-05:00</published><updated>2018-03-15T15:46:00-04:00</updated><author><name>Al Krinker</name></author><id>tag:krinkere.github.io,2015-12-20:/krinkersite/Accessing_wired_Windows_printer_from_your_Mac.html</id><summary type="html">&lt;p&gt;What to do when you are faced with 'Please, commit your changes or stash them before you can merge.' message from git as you are trying to get latest code off your remote repository&lt;/p&gt;</summary><content type="html">&lt;p&gt;Before my PC seized to be, I used to have old wired printer that did the job... the only problem was that I already have few Apple laptops and I wanted to be able to print from them (The problem is easily solved by buying wireless printer that supports AirPrint, i.e. even print from your iPhone!).&lt;/p&gt;
&lt;p&gt;Anyway, if you have wired Windows printer and don't want to upgrade just yet here is what you need to do:&lt;/p&gt;
&lt;p&gt;On Windows PC&lt;br /&gt;
1. Establish user account on your PC. This was one thing that I had to do to make everything that should work to actually work. This is as easy as opening your control panel and clicking on Add user in your Users menu. For more tricks see this: http://www.howtogeek.com/howto/10325/manage-user-accounts-in-windows-home-server/&lt;br /&gt;
2. Now onto actual set up... Select Start-&amp;gt;Devices and Printers. Right click on the printer that you want to share, and either pick share or properties and then pick sharing tab. Make sure that share check box is selected and make sure that you note down the name of the printer.&lt;br /&gt;
3. Open command prompt. Use ipconfig command to find your PC's IP.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;To summarize this part. You have IP address and name of the printer to connect to and you have the credentials that you created in step 1.&lt;/p&gt;
&lt;p&gt;On MAC&lt;br /&gt;
1. Open System Preferences and locate Printers and Scanners icon. Click!&lt;br /&gt;
2. Select + under printers to add new printer, i.e. wired Windows printer.&lt;br /&gt;
3. Right click on the menu and select Customize Toolbar and add Advanced&lt;br /&gt;
4. Click on Advanced. For type select Windows printer via spoolss&lt;br /&gt;
5. For URL provide IP and printer name that you have... so the link looks like smb://192.138.1.13/printer_name (Replace any spaces with %20 in your&lt;br /&gt;
6. Under Choose a driver or Printer Model pick your printer type (I did not see my exact model so I picked closes HP model instead. Worked)&lt;br /&gt;
7. At this point your PC printer will be connected to your Mac.&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;Testing&lt;br /&gt;
Select something to print on your Mac... in my case, the first time it tried to print it asked for my PC username/password which we created previously, after that it was stored in my keychain and was never an issue again.&lt;/p&gt;
&lt;p&gt;That's it! Hope it helps and once again, let me know if you have further questions, etc.&lt;/p&gt;</content><category term="hardware"></category><category term="mac"></category></entry><entry><title>Lucene scoring examplained</title><link href="https://krinkere.github.io/krinkersite/Lucene_scoring_examplained.html" rel="alternate"></link><published>2015-04-30T19:48:00-04:00</published><updated>2018-03-15T12:30:00-04:00</updated><author><name>Al Krinker</name></author><id>tag:krinkere.github.io,2015-04-30:/krinkersite/Lucene_scoring_examplained.html</id><summary type="html">&lt;p&gt;Overview of Lucene scoring&lt;/p&gt;</summary><content type="html">&lt;p&gt;Several good books already explain what Lucene scoring really means and how it is calculated in great detail with lots of basic concepts explain.
In this, post I am going to try to keep it high level for people already familiar with the basics and go straight for the scoring overview.&lt;/p&gt;
&lt;p&gt;The factors involved in Lucene's scoring algorithm are as follows:&lt;br /&gt;
1. tf = term frequency in document = measure of how often a term appears in the document&lt;br /&gt;
2. idf = inverse document frequency = measure of how often the term appears across the index&lt;br /&gt;
3. coord = number of terms in the query that were found in the document&lt;br /&gt;
4. lengthNorm = measure of the importance of a term according to the total number of terms in the field&lt;br /&gt;
5. queryNorm = normalization factor so that queries can be compared&lt;br /&gt;
6. boost (index) = boost of the field at index-time&lt;br /&gt;
7. boost (query) = boost of the field at query-time&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;The implementation, implication and rationales of factors 1,2, 3 and 4 in DefaultSimilarity.java, which is what you get if you don't explicitly specify a similarity, are:
note: the implication of these factors should be read as, "Everything else being equal, … "&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;tf&lt;br /&gt;
Implementation: sqrt(freq)&lt;br /&gt;
Implication: the more frequent a term occurs in a document, the greater its score&lt;br /&gt;
Rationale: documents which contains more of a term are generally more relevant&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;idf&lt;br /&gt;
Implementation: log(numDocs/(docFreq+1)) + 1&lt;br /&gt;
Implication: the greater the occurrence of a term in different documents, the lower its score&lt;br /&gt;
Rationale: common terms are less important than uncommon ones&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;coord&lt;br /&gt;
Implementation: overlap / maxOverlap&lt;br /&gt;
Implication: of the terms in the query, a document that contains more terms will have a higher score&lt;br /&gt;
Rationale: self-explanatory&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;lengthNorm&lt;br /&gt;
Implementation: 1/sqrt(numTerms)&lt;br /&gt;
Implication: a term matched in fields with less terms have a higher score&lt;br /&gt;
Rationale: a term in a field with less terms is more important than one with more&lt;br /&gt;
queryNorm is not related to the relevance of the document, but rather tries to make scores between different queries comparable. It is implemented as 1/sqrt(sumOfSquaredWeights)&lt;br /&gt;
So, roughly speaking (quoting Mark Harwood from the mailing list),&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Documents containing all the search terms are good&lt;/li&gt;
&lt;li&gt;Matches on rare words are better than for common words&lt;/li&gt;
&lt;li&gt;Long documents are not as good as short ones&lt;/li&gt;
&lt;li&gt;Documents which mention the search terms many times are good&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The mathematical definition of the scoring can be found in &lt;a href="https://lucene.apache.org/core/2_9_4/api/all/org/apache/lucene/search/Similarity.html"&gt;org.apache.lucene.search.Class Similarity&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;Customizing scoring&lt;/h3&gt;
&lt;p&gt;Its easy to customize the scoring algorithm. Just subclass DefaultSimilarity and override the method you want to customize.
For example, if you want to ignore how common a term appears across the index,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Similarity&lt;/span&gt; &lt;span class="n"&gt;sim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DefaultSimilarity&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nf"&gt;idf&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;i1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="o"&gt;;&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and if you think for the title field, more terms is better&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;Similarity&lt;/span&gt; &lt;span class="n"&gt;sim&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;new&lt;/span&gt; &lt;span class="n"&gt;DefaultSimilarity&lt;/span&gt;&lt;span class="o"&gt;()&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
  &lt;span class="kd"&gt;public&lt;/span&gt; &lt;span class="kt"&gt;float&lt;/span&gt; &lt;span class="nf"&gt;lengthNorm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt; &lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;numTerms&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;equals&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;))&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;float&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;0.1&lt;/span&gt; &lt;span class="o"&gt;*&lt;/span&gt; &lt;span class="n"&gt;Math&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;log&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;numTerms&lt;/span&gt;&lt;span class="o"&gt;));&lt;/span&gt;
    &lt;span class="k"&gt;else&lt;/span&gt; &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lengthNorm&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="n"&gt;field&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;numTerms&lt;/span&gt;&lt;span class="o"&gt;);&lt;/span&gt;
  &lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;</content><category term="lucene"></category><category term="search"></category></entry><entry><title>How to find a file containing particular text in Linux</title><link href="https://krinkere.github.io/krinkersite/How_to_find_a_file_containing_particular_text_in_Linux.html" rel="alternate"></link><published>2014-05-27T10:41:00-04:00</published><updated>2014-05-27T10:42:00-04:00</updated><author><name>Al Krinker</name></author><id>tag:krinkere.github.io,2014-05-27:/krinkersite/How_to_find_a_file_containing_particular_text_in_Linux.html</id><summary type="html">&lt;p&gt;Use grep to find file containing particular text.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is a quick example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -r &lt;span class="s2"&gt;&amp;quot;text string to search” directory-path&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To search for a string ‘logged in’ in all text (*.log) files located in /etc/networks/ directory for example, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep &lt;span class="s2"&gt;&amp;quot;logged in&amp;quot;&lt;/span&gt; /etc/networks/*.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To search all subdirectories recursively, include -r option like so:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -r &lt;span class="s2"&gt;&amp;quot;logged in&amp;quot;&lt;/span&gt; /etc/networks/*.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The grep command prints the matching lines for each match. Pass -H option to print the filename only:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -H -r &lt;span class="s2"&gt;&amp;quot;logged in&amp;quot;&lt;/span&gt; /etc/networks/*.log
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To search for two or more words, use egrep:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="go"&gt;egrep -w -r &amp;#39;logged in|logged out&amp;#39; /etc/networks/*.log&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To hide warning spam of permission for certain directories being denied, etc, send them to dev/null:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -w -r &lt;span class="s1"&gt;&amp;#39;logged in|logged out&amp;#39;&lt;/span&gt; /etc/networks/*.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make it case insensitive, use -i option:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="gp"&gt;$&lt;/span&gt; grep -i &lt;span class="s2"&gt;&amp;quot;logged in&amp;quot;&lt;/span&gt; /etc/networks/*.log
&lt;/pre&gt;&lt;/div&gt;</content><category term="linux"></category></entry></feed>